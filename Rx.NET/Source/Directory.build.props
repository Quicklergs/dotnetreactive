<Project>
  <PropertyGroup>
    <Copyright>Copyright (c) .NET Foundation and Contributors.</Copyright>
    <MinClientVersion>2.12</MinClientVersion>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <Authors>.NET Foundation and Contributors</Authors>
    <PackageIconUrl>https://raw.githubusercontent.com/dotnet/reactive/0f837d11385cfaf575861ccc5a5fbcafb22d888f/Rx.NET/Resources/Artwork/Logo.png</PackageIconUrl>
    <PackageProjectUrl>https://github.com/dotnet/reactive</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)ReactiveX.snk</AssemblyOriginatorKeyFile>
    <NoWarn>$(NoWarn);1701;1702;CS1591;NU5105</NoWarn>
    <DefaultLanguage>en-US</DefaultLanguage>
    <IncludeSymbols>false</IncludeSymbols>
    <IsTestProject>$(MSBuildProjectName.Contains('Tests'))</IsTestProject>
    <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)Rx.ruleset</CodeAnalysisRuleSet>
    <GeneratePackageOnBuild Condition=" '$(IsTestProject)' != 'true' and '$(CreatePackage)' == 'true' ">true</GeneratePackageOnBuild>
    <PackageOutputPath>$(MSBuildThisFileDirectory)artifacts</PackageOutputPath>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <LangVersion>latest</LangVersion>

    <!--
    Disable diagnostics:
    CA2213 -  IDisposable types should Dispose any IDisposable fields. This rule finds over 600
                examples! These are all in subtle multithreaded or async code. Some of them appear
                not to be real problems. For example, there are places where schedulers retain
                references to IDisposable work items, but that IDisposable interfaces is only there
                to enable application code to cancel scheduled work, so it's not Rx's place to call
                Dispose. And there are more subtle cases where disposal is deferred to give threads
                a chance to shut down. Each of these likely needs individual review:
                https://github.com/dotnet/reactive/issues/1927

    IDE0056 - Use of index/range syntax - relevant types not available on all targets, so we can't
    IDE0057     do this.
    -->
    <!-- Get diagnostics back to the level that the .NET 5.0 SDK had for now. Fix these properly before release. -->
    <NoWarn>$(NoWarn);CA2213;IDE0056;IDE0057;IDE0071;IDE0074;IDE0075;IDE0076;IDE0077;IDE0079;IDE0270;IDE0280;IDE1006;IDE1056</NoWarn>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' != 'Debug'">
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>    
  </PropertyGroup>

  <PropertyGroup Condition="'$(TF_BUILD)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All"/>
    <PackageReference Include="Nerdbank.GitVersioning" Version="3.5.119" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup Condition="'$(IsTestProject)' == 'true'">
    <PackageReference Include="coverlet.collector" Version="3.2.0" />
  </ItemGroup>

</Project>
